
@{
    ViewBag.Title = "tmp";
}
<link rel="stylesheet" href="token-input-facebook.css">

<h2>tmp</h2>
<input type="text" id="demo-input">



@section scripts
{
    <script src="jquery.min.js"></script>
    <script src="jquery.tokeninput.js"></script>
    <link rel="stylesheet" href="token-input.css">

    <script>
        $("#demo-input").tokenInput([
            { id: 7, name: "Ruby" },
            { id: 11, name: "Python" },
            { id: 13, name: "JavaScript" },
            { id: 17, name: "ActionScript" },
            { id: 19, name: "Scheme" },
            { id: 23, name: "Lisp" },
            { id: 29, name: "C#" },
            { id: 31, name: "Fortran" },
            { id: 37, name: "Visual Basic" },
            { id: 41, name: "C" },
            { id: 43, name: "C++" },
            { id: 47, name: "Java" }
        ]);


        $("#demo-input").tokenInput({
            // Search settings
            method: "GET",
            queryParam: "q",
            searchDelay: 300,
            minChars: 1,
            propertyToSearch: "name",
            jsonContainer: null,
            contentType: "json",
            excludeCurrent: false,
            excludeCurrentParameter: "x",
            // Prepopulation settings
            prePopulate: null,
            processPrePopulate: false,
            // Display settings
            hintText: "Type in a search term",
            noResultsText: "No results",
            searchingText: "Searching...",
            deleteText: "&#215;",
            animateDropdown: true,
            placeholder: null,
            theme: null,
            zindex: 999,
            resultsLimit: null,
            enableHTML: false,
            resultsFormatter: function (item) {
                var string = item[this.propertyToSearch];
                return "<li>" + (this.enableHTML ? string : _escapeHTML(string)) + "</li>";
            },

            tokenFormatter: function (item) {
                var string = item[this.propertyToSearch];
                return "<li><p>" + (this.enableHTML ? string : _escapeHTML(string)) + "</p></li>";
            },

            // Tokenization settings
            tokenLimit: null,
            tokenDelimiter: ",",
            preventDuplicates: false,
            tokenValue: "id",

            // Behavioral settings
            allowFreeTagging: false,
            allowTabOut: false,
            autoSelectFirstResult: false,

            // Callbacks
            onResult: null,
            onCachedResult: null,
            onAdd: null,
            onFreeTaggingAdd: null,
            onDelete: null,
            onReady: null,

            // Other settings
            idPrefix: "token-input-",

            // Keep track if the input is currently in disabled mode
            disabled: false
        });

        var myToken = $("#demo-input").tokenInput();

        // add a new item
        myToken.tokenInput("add", { id: x, name: y });

        // remove an item
        selector.tokenInput("remove", { id: x });
        selector.tokenInput("remove", { name: y });

        // clear the input
        selector.tokenInput("clear");

        // get the data
        selector.tokenInput("get");


    </script>

}
